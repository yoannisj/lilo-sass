// =============================================================================
// =LILO - CLEAR
// =============================================================================
////
//// @group lilo-register
//// @author [Yoannis Jamar](http://yoannis.me)

@import "aleksi/general/throw";

$__lilo-register__: () !default;

// =FUNCTIONS
// =============================================================================

// =lilo-clear([ $identifiers ])
// -----------------------------------------------------------------------------
/// Clears Lilo's register. Running this will make styles that were in the
/// register unavailable for further sharing. Useful if at some point you want
/// to create a new set of shared styles that doesn't interfere with previously
/// registered styles. By default, the complete registry will be cleared, but
/// you can pass a white-list of identifiers to clear, which will leave other
/// registered identifiers untouched.
///
/// @param $identifiers {list|string} [null] - white-list of identifiers to clear
/// @return {bool} - Always return true
///
/// @access public
/// @since 0.1.0

@function lilo-clear( $identifiers: null )
{
  // if no identifiers were passed
  @if type-of($identifiers) == 'null' {
    // clear complete register
    $__lilo-register__: () !global;
    @return true;
  }

  // sanitize `$identifiers` argument
  @each $identifier in $identifiers
  {
    @if type-of($identifier) != 'string' {
      @return throw-error('_lilo-clear():: $identifier must be a string. Was #{inspect($identifier)}.');
    }
  }

  // clear selected identifiers only and return `true` to communicate success
  $__lilo-register__: map-remove($__lilo-register__, $identifiers...) !global;
  @return true;
}

// =MIXINS
// =============================================================================

// =lilo-clear([ $identifiers ])
// -----------------------------------------------------------------------------
/// Clears Lilo's register. Delegates to the `lilo-clear()` function.
///
/// @see lilo-clear
///
/// @access public
/// @since 0.1.0

@mixin lilo-clear( $identifiers: null )
{
  $cleared: lilo-clear( $identifiers );
}